TEST_CASE(SUITE("calls write one time for same variation"))
{
    EventStorage storage(EventBufferConfig::AllTypes(10));

    REQUIRE_FALSE(
        storage.Update(Event<BinarySpec>(Binary(true), 0, EventClass::EC1, EventBinaryVariation::Group2Var1)));
    REQUIRE_FALSE(
        storage.Update(Event<BinarySpec>(Binary(true), 0, EventClass::EC1, EventBinaryVariation::Group2Var1)));

    // select events by class
    REQUIRE(storage.SelectByClass(EventClass::EC1) == 2);
    REQUIRE(storage.NumSelected() == 2);
    REQUIRE(storage.NumUnwritten(EventClass::EC1) == 2);

    // set up the expected order
    MockEventWriteHandler handler;
    handler.Expect(EventBinaryVariation::Group2Var1, 2);

    REQUIRE(storage.Write(handler) == 2);
    REQUIRE(storage.NumSelected() == 0);
    REQUIRE(storage.NumUnwritten(EventClass::EC1) == 0);

    handler.AssertEmpty();
}
