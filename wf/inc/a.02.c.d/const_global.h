#ifndef __CONST_GLOBAL__
#define __CONST_GLOBAL__

#define NUMBER_INPUTS                   8
#define NUMBER_SIMPLE_OUTPUTS           9
#define NUMBER_OUTPUTS                  (NUMBER_SIMPLE_OUTPUTS)

#define N_INPUT_BOARDS          1
#define N_OUTPUT_BOARDS         2

//""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
//``````````````````````````````````````````````````````````````````````````````````
//                   ~~~    Name Enum DI CMD~~~
//..................................................................................
//""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
enum __rang_small_A01 {
RANGE_SMALL_A01_BLOCK_VKL_VVO = 0,
RANGE_SMALL_A01_BLOCK_VKL_VVP,
RANGE_SMALL_A01_RESET_LEDS,
RANGE_SMALL_A01_RESET_RELES,
RANGE_SMALL_A01_MISCEVE_DYSTANCIJNE,
RANGE_SMALL_A01_STATE_VVP,
RANGE_SMALL_A01_STATE_VVO, //RANGE_SMALL_A01_OTKL_VID_ZOVN_ZAHYSTIV,
RANGE_SMALL_A01_VKL_VVO,
RANGE_SMALL_A01_VKL_VVP,
RANGE_SMALL_A01_CTRL_VKL_VVO,
RANGE_SMALL_A01_CTRL_VKL_VVP,
RANGE_SMALL_A01_OTKL_VVO,
RANGE_SMALL_A01_OTKL_VVP,
RANGE_SMALL_A01_CTRL_OTKL_VVO,
RANGE_SMALL_A01_CTRL_OTKL_VVP,

RANGE_SMALL_A01_1_GRUPA_USTAVOK,
RANGE_SMALL_A01_2_GRUPA_USTAVOK,
RANGE_SMALL_A01_3_GRUPA_USTAVOK,
RANGE_SMALL_A01_4_GRUPA_USTAVOK,
RANGE_SMALL_A01_RESET_BLOCK_READY_TU_VID_ZAHYSTIV,  
RANGE_SMALL_A01_NKN_DZO,
RANGE_SMALL_A01_ZBR_BLK_DZO1_I_O_3G,
RANGE_SMALL_A01_ZBR_BLK_DZO1_I_O,
RANGE_SMALL_A01_BLK_DZO1,
    
RANGE_SMALL_A01_BLK_USK_DZO2,
RANGE_SMALL_A01_OP_USK_DZO2,
RANGE_SMALL_A01_ZBR_BLK_DZO2_I_O_3G,
RANGE_SMALL_A01_BLK_DZO2,
RANGE_SMALL_A01_BLK_USK_DZO3,
RANGE_SMALL_A01_OP_USK_DZO3,
RANGE_SMALL_A01_ZBR_BLK_DZO3_I_O_3G,
RANGE_SMALL_A01_BLK_DZO3,
RANGE_SMALL_A01_ZBR_BLK_DZO4_I_O_3G,
RANGE_SMALL_A01_BLK_DZO4,

RANGE_SMALL_A01_BLOCK_ZDZ,
RANGE_SMALL_A01_PUSK_ZDZ_VID_DV,

RANGE_SMALL_A01_BLK_MCZO1,
RANGE_SMALL_A01_BLK_MCZO2,
RANGE_SMALL_A01_BLK_USK_MCZO2,
RANGE_SMALL_A01_BLK_MCZO3,
RANGE_SMALL_A01_BLK_MCZO4,
RANGE_SMALL_A01_BLK_MCZR1,
RANGE_SMALL_A01_BLK_MCZR2,



RANGE_SMALL_A01_STAT_BLK_APV,

RANGE_SMALL_A01_ACHR_CHAPV_VID_DV,
RANGE_SMALL_A01_BLOCK_ACHR1,
RANGE_SMALL_A01_BLOCK_ACHR2,

RANGE_SMALL_A01_PUSK_UROV_VID_DV,

RANGE_SMALL_A01_ZOVN_NESPRN_DZR,
RANGE_SMALL_A01_ZBR_BLK_DZR1_I_O_3G,
RANGE_SMALL_A01_ZBR_BLK_DZR1_I_O,
RANGE_SMALL_A01_BLK_DZR1,
RANGE_SMALL_A01_BLK_USK_DZR2,
RANGE_SMALL_A01_OP_USK_DZR2,
RANGE_SMALL_A01_ZBR_BLK_DZR2_I_O_3G,
RANGE_SMALL_A01_BLK_DZR2,
RANGE_SMALL_A01_BLK_USK_DZR3,
RANGE_SMALL_A01_OP_USK_DZR3,
RANGE_SMALL_A01_ZBR_BLK_DZR3_I_O_3G,
RANGE_SMALL_A01_BLK_DZR3,


RANGE_SMALL_A01_BLOCK_UMIN1,
RANGE_SMALL_A01_START_UMIN1,
RANGE_SMALL_A01_BLOCK_UMIN2,
RANGE_SMALL_A01_START_UMIN2,

RANGE_SMALL_A01_BLOCK_UMAX1,
RANGE_SMALL_A01_BLOCK_UMAX2,

RANGE_SMALL_A01_BLOCK_UP1,

RANGE_SMALL_A01_DF1_IN = (RANGE_SMALL_A01_BLOCK_UP1 + NUMBER_UP),
RANGE_SMALL_A01_DF1_RST,
RANGE_SMALL_A01_DF2_IN,
RANGE_SMALL_A01_DF2_RST,
RANGE_SMALL_A01_DF3_IN,
RANGE_SMALL_A01_DF3_RST,
RANGE_SMALL_A01_DF4_IN,
RANGE_SMALL_A01_DF4_RST,
RANGE_SMALL_A01_DF5_IN,
RANGE_SMALL_A01_DF5_RST,
RANGE_SMALL_A01_DF6_IN,
RANGE_SMALL_A01_DF6_RST,
RANGE_SMALL_A01_DF7_IN,
RANGE_SMALL_A01_DF7_RST,
RANGE_SMALL_A01_DF8_IN,
RANGE_SMALL_A01_DF8_RST,
RANGE_SMALL_A01_DF9_IN,
RANGE_SMALL_A01_DF9_RST,
RANGE_SMALL_A01_DF10_IN,
RANGE_SMALL_A01_DF10_RST,
RANGE_SMALL_A01_DF11_IN,
RANGE_SMALL_A01_DF11_RST,
RANGE_SMALL_A01_DF12_IN,
RANGE_SMALL_A01_DF12_RST,
RANGE_SMALL_A01_DF13_IN,
RANGE_SMALL_A01_DF13_RST,
RANGE_SMALL_A01_DF14_IN,
RANGE_SMALL_A01_DF14_RST,
RANGE_SMALL_A01_DF15_IN,
RANGE_SMALL_A01_DF15_RST,
RANGE_SMALL_A01_DF16_IN,
RANGE_SMALL_A01_DF16_RST,
RANGE_SMALL_A01_DT1_SET,
RANGE_SMALL_A01_DT1_RESET,
RANGE_SMALL_A01_DT2_SET,
RANGE_SMALL_A01_DT2_RESET,
RANGE_SMALL_A01_DT3_SET,
RANGE_SMALL_A01_DT3_RESET,
RANGE_SMALL_A01_DT4_SET,
RANGE_SMALL_A01_DT4_RESET,

RANG_SMALL_A01_LF1,
RANG_SMALL_A01_LF2,
RANG_SMALL_A01_LF3,
RANG_SMALL_A01_LF4,
RANG_SMALL_A01_LF5,
RANG_SMALL_A01_LF6,
RANG_SMALL_A01_LF7,
RANG_SMALL_A01_LF8,
RANG_SMALL_A01_LF9,
RANG_SMALL_A01_LF10,
RANG_SMALL_A01_LF11,
RANG_SMALL_A01_LF12,
RANG_SMALL_A01_LF13,
RANG_SMALL_A01_LF14,
RANG_SMALL_A01_LF15,
RANG_SMALL_A01_LF16,
TOTAL_SIGNAL_FOR_RANG_SMALL_A01,
TOTAL_GENERAL_SIGNAL_FOR_RANG_SMALL = (RANGE_SMALL_A01_NKN_DZO - RANGE_SMALL_A01_BLOCK_VKL_VVO),
TOTAL_DZO_SIGNAL_FOR_RANG_SMALL  = (RANGE_SMALL_A01_BLOCK_ZDZ - RANGE_SMALL_A01_NKN_DZO),
TOTAL_DZR_SIGNAL_FOR_RANG_SMALL  = (RANGE_SMALL_A01_BLOCK_UMIN1 - RANGE_SMALL_A01_ZOVN_NESPRN_DZR),
TOTAL_ZDZ_SIGNAL_FOR_RANG_SMALL  = (RANGE_SMALL_A01_BLK_MCZO1 - RANGE_SMALL_A01_BLOCK_ZDZ ),
TOTAL_MCZO_SIGNAL_FOR_RANG_SMALL = (RANGE_SMALL_A01_BLK_MCZR1 - RANGE_SMALL_A01_BLK_MCZO1 ),
TOTAL_MCZR_SIGNAL_FOR_RANG_SMALL = (RANGE_SMALL_A01_STAT_BLK_APV - RANGE_SMALL_A01_BLK_MCZR1),
TOTAL_APV_SIGNAL_FOR_RANG_SMALL  = (RANGE_SMALL_A01_ACHR_CHAPV_VID_DV-RANGE_SMALL_A01_STAT_BLK_APV),
TOTAL_ACHR_SIGNAL_FOR_RANG_SMALL = (RANGE_SMALL_A01_PUSK_UROV_VID_DV- RANGE_SMALL_A01_ACHR_CHAPV_VID_DV),

TOTAL_UROV_SIGNAL_FOR_RANG_SMALL = (RANGE_SMALL_A01_ZOVN_NESPRN_DZR-RANGE_SMALL_A01_PUSK_UROV_VID_DV),
TOTAL_UMIN_SIGNAL_FOR_RANG_SMALL = (RANGE_SMALL_A01_BLOCK_UMAX1-RANGE_SMALL_A01_BLOCK_UMIN1),
TOTAL_UMAX_SIGNAL_FOR_RANG_SMALL = (RANGE_SMALL_A01_BLOCK_UP1-RANGE_SMALL_A01_BLOCK_UMAX1),
TOTAL_UP_SIGNAL_FOR_RANG_SMALL = (RANGE_SMALL_A01_DF1_IN-RANGE_SMALL_A01_BLOCK_UP1),
TOTAL_EL_SIGNAL_FOR_RANG_SMALL = (TOTAL_SIGNAL_FOR_RANG_SMALL_A01 - RANGE_SMALL_A01_DF1_IN),//16 

N_SML_REMAINDER   = ((TOTAL_SIGNAL_FOR_RANG_SMALL_A01&0x1f)!= 0),
N_SML = (  ((TOTAL_SIGNAL_FOR_RANG_SMALL_A01>>5)+N_SML_REMAINDER)),

TOTAL_MTZ_STUB_SIGNAL_FOR_RANG_SMALL = 0, 
TOTAL_VMP_SIGNAL_FOR_RANG_SMALL = 0 
};

#define N_SMALL  N_SML

//~~~   
//..................................................................................
//"""""

//""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
//``````````````````````````````````````````````````````````````````````````````````
//                   ~~~    Name Enum DO CMD~~~
//..................................................................................
//""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
enum __rang_output_led_df_reg_A01 {

RNG_BIG_BLOCK_VKL_VVO = 0,
RNG_BIG_BLOCK_VKL_VVP,
RNG_BIG_RESET_LEDS,
RNG_BIG_RESET_RELES,
RNG_BIG_MISCEVE_DYSTANCIJNE,
RNG_BIG_STATE_VVR,
RNG_BIG_STATE_VVO,//RNG_BIG_OTKL_VID_ZOVN_ZAHYSTIV,???
RNG_BIG_VKL_VVO,
RNG_BIG_VKL_VVR,
RNG_BIG_CTRL_VKL_VVO,
RNG_BIG_CTRL_VKL_VVR,
RNG_BIG_OTKL_VV_VVO,
RNG_BIG_OTKL_VV_VVR,
RNG_BIG_CTRL_OTKL_VVO,
RNG_BIG_CTRL_OTKL_VVR,
RNG_BIG_PRYVID_VVO,
RNG_BIG_PRYVID_VVR,
RNG_BIG_NKNO,
RNG_BIG_NKNR,
RNG_BIG_PEREVYSHCHENNJA_I_NOM_VYMK,
RNG_BIG_KRYTYCHNYJ_RESURS_VVO,
RNG_BIG_VYCHERPANYJ_RESURS_VVO,
RNG_BIG_DEFECT,
RNG_BIG_AVAR_DEFECT,
RNG_BIG_WORK_A_REJESTRATOR,
RNG_BIG_WORK_D_REJESTRATOR,
RNG_BIG_VIDKL_VID_ZAKHYSTIV_VVO,
RNG_BIG_VIDKL_VID_ZAKHYSTIV_VVR,
RNG_BIG_WORK_BO_VVO,
RNG_BIG_WORK_BO_VVR,
RNG_BIG_WORK_BV_VVO,
RNG_BIG_WORK_BV_VVR,

RNG_BIG_1_GRUPA_USTAVOK,
RNG_BIG_2_GRUPA_USTAVOK,
RNG_BIG_3_GRUPA_USTAVOK,
RNG_BIG_4_GRUPA_USTAVOK,
RNG_BIG_INVERS_DV_GRUPA_USTAVOK,
RNG_BIG_BLK_GRUP_USTAVOK_VID_ZACHYSTIV,
RNG_BIG_RESET_BLOCK_READY_TU_VID_ZAHYSTIV,
RNG_BIG_READY_TU,
RNG_BIG_SETTINGS_CHANGED,

RNG_BIG_ZVN_NESPR_DZO,
RNG_BIG_ZBR_BLOCK_DZO1_I_O_3G,
RNG_BIG_ZBR_BLOCK_DZO1_I_O,
RNG_BIG_BLOCK_DZO1,
RNG_BIG_I_BLK_DZO_I_LESS_IP_0_P_5,
RNG_BIG_I_O3G_DIV_I_O1G_DZO,
RNG_BIG_BLK_DZO1_I_O3G_DIV_I_O1G_DZO,
RNG_BIG_BLK_DZO1_I_OSN,
RNG_BIG_NKN_DZO,
RNG_BIG_CNKN_DZO,
RNG_BIG_U_DZO_U_O_LESS_UP_0_25P_UN,
RNG_BIG_PO2_I_BLK_DZO,//<-PO2 DZO1
RNG_BIG_BLK_DZO1,
RNG_BIG_PO_DZO1,
RNG_BIG_DZO1,
RNG_BIG_PO_AMCZ_DZO1,
RNG_BIG_AMCZ_DZO1,
RNG_BIG_BLOCK_PR_DZO2,
RNG_BIG_OP_PR_DZO2,
RNG_BIG_ZBR_BLOCK_DZO2_I_O_3G,
RNG_BIG_BLOCK_DZO2,
RNG_BIG_BLK_DZO2_I_OSN_3G_DIV_1G,
RNG_BIG_BLK_DZO2,
RNG_BIG_SECTOR_DIR_DZO2,
RNG_BIG_SECTOR_INV_DZO2,
RNG_BIG_PO_DIR_DZO2,
RNG_BIG_PO_INV_DZO2,
RNG_BIG_DZO2,

RNG_BIG_AMCZ_DZO2, RNG_BIG_PO_AMCZ_DZO2,

RNG_BIG_BLOCK_PR_DZO3,
RNG_BIG_OP_PR_DZO3,
RNG_BIG_ZBR_BLOCK_DZO3_I_O_3G,
RNG_BIG_BLOCK_DZO3,
RNG_BIG_BLK_DZO3_I_OSN_3G_DIV_1G,
RNG_BIG_BLK_DZO3,
RNG_BIG_SECTOR_DIR_DZO3,
RNG_BIG_SECTOR_INV_DZO3,
RNG_BIG_PO_DIR_DZO3,
RNG_BIG_PO_INV_DZO3,
RNG_BIG_DZO3,

RNG_BIG_AMCZ_DZO3,RNG_BIG_PO_AMCZ_DZO3,

RNG_BIG_ZBR_BLOCK_DZO4_I_O_3G,
RNG_BIG_BLOCK_DZO4,
RNG_BIG_BLK_DZO4_I_OSN_3G_DIV_1G,
RNG_BIG_BLK_DZO4,
RNG_BIG_NAPRYM_DIR_DZO4,
RNG_BIG_NAPRYM_INV_DZO4,
RNG_BIG_PO_DIR_DZO4,
RNG_BIG_PO_INV_DZO4,
RNG_BIG_DZO4,

RNG_BIG_AMCZ_DZO4,RNG_BIG_PO_AMCZ_DZO4,


RNG_BIG_BLOCK_ZDZ,
RNG_BIG_PUSK_ZDZ_VID_DV,
RNG_BIG_LIGHT_ZDZ_FROM_DV,
RNG_BIG_LIGHT_ZDZ_FROM_OVD1,
RNG_BIG_LIGHT_ZDZ_FROM_OVD2,
RNG_BIG_LIGHT_ZDZ_FROM_OVD3,
RNG_BIG_PO_ZDZ,
RNG_BIG_ZDZ,

RNG_BIG_NCN_MCZO,RNG_BIG_PO_BLK_U_OSN_LESS_0_05UN_MCZO,
RNG_BIG_BLOCK_MCZO1,
//RNG_BIG_NCN_MCZO1,
RNG_BIG_PO_BLK_U_OSN_LESS_UST_MCZO1,
RNG_BIG_SECTOR_VPERED_MCZON1,
RNG_BIG_SECTOR_NAZAD_MCZON1,
RNG_BIG_PO_MCZO1,
RNG_BIG_PO_MCZON1_VPERED,
RNG_BIG_PO_MCZON1_NAZAD,
RNG_BIG_PO_MCZOPN1,
RNG_BIG_MCZO1,

RNG_BIG_BLOCK_MCZO2,RNG_BIG_BLOCK_PR_MCZO2,
//RNG_BIG_NCN_MCZO2,
RNG_BIG_PO_BLK_U_OSN_LESS_UST_MCZO2,
RNG_BIG_SECTOR_VPERED_MCZON2,
RNG_BIG_SECTOR_NAZAD_MCZON2,
RNG_BIG_PO_MCZO2,
RNG_BIG_PO_MCZON2_VPERED,
RNG_BIG_PO_MCZON2_NAZAD,
RNG_BIG_PO_MCZOPN2,
RNG_BIG_MCZO2,

RNG_BIG_BLOCK_MCZO3,
//RNG_BIG_NCN_MCZO3,
RNG_BIG_PO_BLK_U_OSN_LESS_UST_MCZO3,
RNG_BIG_SECTOR_VPERED_MCZON3,
RNG_BIG_SECTOR_NAZAD_MCZON3,
RNG_BIG_PO_MCZO3,
RNG_BIG_PO_MCZON3_VPERED,
RNG_BIG_PO_MCZON3_NAZAD,
RNG_BIG_PO_MCZOPN3,
RNG_BIG_MCZO3,

RNG_BIG_BLOCK_MCZO4,
//RNG_BIG_NCN_MCZO4,
RNG_BIG_PO_BLK_U_OSN_LESS_UST_MCZO4,
RNG_BIG_SECTOR_VPERED_MCZON4,
RNG_BIG_SECTOR_NAZAD_MCZON4,
RNG_BIG_PO_MCZO4,
RNG_BIG_PO_MCZON4_VPERED,
RNG_BIG_PO_MCZON4_NAZAD,
RNG_BIG_PO_MCZOPN4,
RNG_BIG_MCZO4,

RNG_BIG_NCN_MCZR,RNG_BIG_PO_BLK_U_RSV_LESS_UN,
RNG_BIG_BLOCK_MCZR1,//RNG_BIG_NCN_MCZR1,
RNG_BIG_PO_BLK_U_RSV_LESS_UST_MCZR1,
RNG_BIG_SECTOR_VPERED_MCZRN1,
RNG_BIG_SECTOR_NAZAD_MCZRN1,
RNG_BIG_PO_MCZR1,
RNG_BIG_PO_MCZRN1_VPERED,
RNG_BIG_PO_MCZRN1_NAZAD,
RNG_BIG_PO_MCZRPN1,
RNG_BIG_MCZR1,

RNG_BIG_BLOCK_MCZR2,//RNG_BIG_NCN_MCZR2,
RNG_BIG_PO_BLK_U_RSV_LESS_UST_MCZR2,
RNG_BIG_SECTOR_VPERED_MCZRN2,
RNG_BIG_SECTOR_NAZAD_MCZRN2,
RNG_BIG_PO_MCZR2,
RNG_BIG_PO_MCZRN2_VPERED,
RNG_BIG_PO_MCZRN2_NAZAD,
RNG_BIG_PO_MCZRPN2,
RNG_BIG_MCZR2,

RNG_BIG_STAT_BLK_APV,
RNG_BIG_APV1,
RNG_BIG_APV2,
RNG_BIG_APV3,
RNG_BIG_APV4,
RNG_BIG_APV_WORK,

RNG_BIG_ACHR_CHAPV_VID_DV,
RNG_BIG_BLOCK_ACHR1,
RNG_BIG_BLOCK_ACHR2,
RNG_BIG_RAZR_CHAPV,
RNG_BIG_VN_BLOCK_CHAPV,
RNG_BIG_PO_ACHR1,
RNG_BIG_PO_CHAPV1,
RNG_BIG_ACHR_CHAPV1,
RNG_BIG_PO_ACHR2,
RNG_BIG_PO_CHAPV2,
RNG_BIG_ACHR_CHAPV2,

RNG_BIG_PUSK_UROV_VID_DV,
RNG_BIG_PO_UROV,
RNG_BIG_UROV1,
RNG_BIG_UROV2,
RNG_BIG_ZVN_NESPR_DZR,
RNG_BIG_ZBR_BLOCK_DZR1_I_R_3G,
RNG_BIG_ZBR_BLOCK_DZR1_I_R,
RNG_BIG_BLOCK_DZR1,
RNG_BIG_I_BLK_DZR_I_LESS_0_P_5A,
RNG_BIG_I_RSV_3G_DIV_1G_DZR,
RNG_BIG_BLK_DZR1_I_RSV_3G_DIV_1G_DZR,//
RNG_BIG_BLK_DZR1_I_RSV,

RNG_BIG_NKN_DZR,
RNG_BIG_CNKN_DZR,
RNG_BIG_U_DZR_U_RSV_LESS_0_25P_UN,
RNG_BIG_PO2_I_BLK_DZR1,
RNG_BIG_BLK_DZR1,
RNG_BIG_PO_DZR1,
RNG_BIG_DZR1,
RNG_BIG_PO_AMCZ_DZR1,
RNG_BIG_AMCZ_DZR1,

RNG_BIG_BLOCK_PR_DZR2,
RNG_BIG_OP_PR_DZR2,
RNG_BIG_ZBR_BLOCK_DZR2_I_R_3G,
RNG_BIG_BLOCK_DZR2,
RNG_BIG_BLK_DZR2_I_RSV_3G_DIV_1G,
RNG_BIG_BLK_DZR2,
RNG_BIG_SECTOR_DIR_DZR2,
RNG_BIG_SECTOR_INV_DZR2,
RNG_BIG_PO_DIR_DZR2,
RNG_BIG_PO_INV_DZR2,
RNG_BIG_DZR2,
RNG_BIG_AMCZ_DZR2,
RNG_BIG_PO_AMCZ_DZR2,

RNG_BIG_BLOCK_PR_DZR3,
RNG_BIG_OP_PR_DZR3,
RNG_BIG_ZBR_BLOCK_DZR3_I_R_3G,
RNG_BIG_BLOCK_DZR3,
RNG_BIG_BLK_DZR3_I_RSV_3G_DIV_1G,
RNG_BIG_BLK_DZR3,
RNG_BIG_SECTOR_DIR_DZR3,
RNG_BIG_SECTOR_INV_DZR3,
RNG_BIG_PO_DIR_DZR3,
RNG_BIG_PO_INV_DZR3,
RNG_BIG_DZR3,
RNG_BIG_AMCZ_DZR3,
RNG_BIG_PO_AMCZ_DZR3,

RNG_BIG_BLOCK_UMIN1,
RNG_BIG_START_UMIN1,
RNG_BIG_BLOCK_UMIN2,
RNG_BIG_START_UMIN2,
RNG_BIG_PO_UMIN1,
RNG_BIG_PO_UBLK_UMIN1,
RNG_BIG_PO_IBLK_UMIN1,
RNG_BIG_UMIN1,
RNG_BIG_PO_UMIN2,
RNG_BIG_PO_UBLK_UMIN2,
RNG_BIG_PO_IBLK_UMIN2,
RNG_BIG_UMIN2,

RNG_BIG_BLOCK_UMAX1,
RNG_BIG_PO_UMAX1,
RNG_BIG_UMAX1,
RNG_BIG_BLOCK_UMAX2,
RNG_BIG_PO_UMAX2,
RNG_BIG_UMAX2,

RNG_BIG_BLOCK_UP1,
RNG_BIG_PO_UP1,
RNG_BIG_UP1,
RNG_BIG_DF1_IN = (RNG_BIG_BLOCK_UP1 + 3*NUMBER_UP),
RNG_BIG_DF1_RST, 
RNG_BIG_DF1_OUT,
RNG_BIG_DF2_IN,
RNG_BIG_DF2_RST,
RNG_BIG_DF2_OUT,
RNG_BIG_DF3_IN,
RNG_BIG_DF3_RST,
RNG_BIG_DF3_OUT,
RNG_BIG_DF4_IN,
RNG_BIG_DF4_RST,
RNG_BIG_DF4_OUT,
RNG_BIG_DF5_IN,
RNG_BIG_DF5_RST,
RNG_BIG_DF5_OUT,
RNG_BIG_DF6_IN,
RNG_BIG_DF6_RST,
RNG_BIG_DF6_OUT,
RNG_BIG_DF7_IN,
RNG_BIG_DF7_RST,
RNG_BIG_DF7_OUT,
RNG_BIG_DF8_IN,
RNG_BIG_DF8_RST,
RNG_BIG_DF8_OUT,
RNG_BIG_DF9_IN,
RNG_BIG_DF9_RST,
RNG_BIG_DF9_OUT,
RNG_BIG_DF10_IN,
RNG_BIG_DF10_RST,
RNG_BIG_DF10_OUT,
RNG_BIG_DF11_IN,
RNG_BIG_DF11_RST,
RNG_BIG_DF11_OUT,
RNG_BIG_DF12_IN,
RNG_BIG_DF12_RST,
RNG_BIG_DF12_OUT,
RNG_BIG_DF13_IN,
RNG_BIG_DF13_RST,
RNG_BIG_DF13_OUT,
RNG_BIG_DF14_IN,
RNG_BIG_DF14_RST,
RNG_BIG_DF14_OUT,
RNG_BIG_DF15_IN,
RNG_BIG_DF15_RST,
RNG_BIG_DF15_OUT,
RNG_BIG_DF16_IN,
RNG_BIG_DF16_RST,
RNG_BIG_DF16_OUT,
RNG_BIG_DT1_SET,
RNG_BIG_DT1_RESET,
RNG_BIG_DT1_OUT,
RNG_BIG_DT2_SET,
RNG_BIG_DT2_RESET,
RNG_BIG_DT2_OUT,
RNG_BIG_DT3_SET,
RNG_BIG_DT3_RESET,
RNG_BIG_DT3_OUT,
RNG_BIG_DT4_SET,
RNG_BIG_DT4_RESET,
RNG_BIG_DT4_OUT,
RNG_BIG_D_AND1,
RNG_BIG_D_AND2,
RNG_BIG_D_AND3,
RNG_BIG_D_AND4,
RNG_BIG_D_AND5,
RNG_BIG_D_AND6,
RNG_BIG_D_AND7,
RNG_BIG_D_AND8,
RNG_BIG_D_OR1,
RNG_BIG_D_OR2,
RNG_BIG_D_OR3,
RNG_BIG_D_OR4,
RNG_BIG_D_OR5,
RNG_BIG_D_OR6,
RNG_BIG_D_OR7,
RNG_BIG_D_OR8,
RNG_BIG_D_XOR1,
RNG_BIG_D_XOR2,
RNG_BIG_D_XOR3,
RNG_BIG_D_XOR4,
RNG_BIG_D_XOR5,
RNG_BIG_D_XOR6,
RNG_BIG_D_XOR7,
RNG_BIG_D_XOR8,
RNG_BIG_D_NOT1,
RNG_BIG_D_NOT2,
RNG_BIG_D_NOT3,
RNG_BIG_D_NOT4,
RNG_BIG_D_NOT5,
RNG_BIG_D_NOT6,
RNG_BIG_D_NOT7,
RNG_BIG_D_NOT8,
RNG_BIG_D_NOT9,
RNG_BIG_D_NOT10,
RNG_BIG_D_NOT11,
RNG_BIG_D_NOT12,
RNG_BIG_D_NOT13,
RNG_BIG_D_NOT14,
RNG_BIG_D_NOT15,
RNG_BIG_D_NOT16,
RNG_BIG_LF1,
RNG_BIG_LF2,
RNG_BIG_LF3,
RNG_BIG_LF4,
RNG_BIG_LF5,
RNG_BIG_LF6,
RNG_BIG_LF7,
RNG_BIG_LF8,
RNG_BIG_LF9,
RNG_BIG_LF10,
RNG_BIG_LF11,
RNG_BIG_LF12,
RNG_BIG_LF13,
RNG_BIG_LF14,
RNG_BIG_LF15,
RNG_BIG_LF16,
RNG_BIG_ERROR_CONF_EL,
TOTAL_SIGNAL_FOR_RNG_BIG,
TOTAL_GENERAL_SIGNAL_FOR_RNG_BIG  = (RNG_BIG_ZVN_NESPR_DZO - RNG_BIG_BLOCK_VKL_VVO),
TOTAL_DZO_SIGNAL_FOR_RNG_BIG      = (RNG_BIG_BLOCK_ZDZ -RNG_BIG_ZVN_NESPR_DZO), 

TOTAL_ZDZ_SIGNAL_FOR_RNG_BIG  = (RNG_BIG_NCN_MCZO-RNG_BIG_BLOCK_ZDZ),  
TOTAL_MCZO_SIGNAL_FOR_RNG_BIG  = (RNG_BIG_NCN_MCZR-RNG_BIG_NCN_MCZO),   
TOTAL_MCZR_SIGNAL_FOR_RNG_BIG  = (RNG_BIG_STAT_BLK_APV-RNG_BIG_NCN_MCZR),  
      
TOTAL_APV_SIGNAL_FOR_RNG_BIG = (RNG_BIG_ACHR_CHAPV_VID_DV-RNG_BIG_STAT_BLK_APV),
TOTAL_ACHR_CHAPV_SIGNAL_FOR_RNG_BIG = (RNG_BIG_PUSK_UROV_VID_DV-RNG_BIG_ACHR_CHAPV_VID_DV),
TOTAL_UROV_SIGNAL_FOR_RNG_BIG = (RNG_BIG_ZVN_NESPR_DZR-RNG_BIG_PUSK_UROV_VID_DV),
TOTAL_DZR_SIGNAL_FOR_RNG_BIG  = (RNG_BIG_BLOCK_UMIN1-RNG_BIG_ZVN_NESPR_DZR),      
TOTAL_UMIN_SIGNAL_FOR_RNG_BIG  = (RNG_BIG_BLOCK_UMAX1-RNG_BIG_BLOCK_UMIN1),
TOTAL_UMAX_SIGNAL_FOR_RNG_BIG  = (RNG_BIG_BLOCK_UP1-RNG_BIG_BLOCK_UMAX1),
TOTAL_UP_SIGNAL_FOR_RNG_BIG    = (RNG_BIG_DF1_IN-RNG_BIG_BLOCK_UP1),
TOTAL_VMP_SIGNAL_FOR_RNG_BIG   = 0,
TOTAL_EL_SIGNAL_FOR_RNG_BIG = (TOTAL_SIGNAL_FOR_RNG_BIG-RNG_BIG_DF1_IN),

N_BG_REMAINDER   = ((TOTAL_SIGNAL_FOR_RNG_BIG&0x1f)!= 0),

N_BG   =(  ((TOTAL_SIGNAL_FOR_RNG_BIG>>5)+(N_BG_REMAINDER))  ),

TOTAL_MTZ_STUB_SIGNAL_FOR_RNG_BIG = 0

};

#define N_BIG    N_BG  

//~~~   
//..................................................................................
//"""""

/*****************************************/
//Макски сигналів, які можна зранжувати на функціональні кнопки у Режимі Кнопка
/*****************************************/
#define MASKA_BUTTON_MODE_0_SIGNALS_0 0

#define MASKA_BUTTON_MODE_0_SIGNALS_A01_0 (unsigned int)(         \
    (1u << (RANGE_SMALL_A01_RESET_LEDS - 0))       \
  | (1u << (RANGE_SMALL_A01_RESET_RELES- 0))       \
  | (1u << (RANGE_SMALL_A01_VKL_VVP    - 0))       \
  | (1u << (RANGE_SMALL_A01_OTKL_VVP   - 0))       \
  | (1u << (RANGE_SMALL_A01_RESET_BLOCK_READY_TU_VID_ZAHYSTIV - 0))      \
)

#define MASKA_BUTTON_MODE_0_SIGNALS_1 0
#define MASKA_BUTTON_MODE_0_SIGNALS_A01_1 0
#define MASKA_BUTTON_MODE_0_SIGNALS_2 0

#define MASKA_BUTTON_MODE_0_SIGNALS_A01_2 (unsigned int)(         \
(1u << (RANGE_SMALL_A01_DF1_IN    &0x1f))    \
 | (1u << (RANGE_SMALL_A01_DF2_IN    &0x1f)) \
 | (1u << (RANGE_SMALL_A01_DF3_IN    &0x1f)) \
 | (1u << (RANGE_SMALL_A01_DF4_IN    &0x1f)) \
 | (1u << (RANGE_SMALL_A01_DF5_IN    &0x1f)) \
 | (1u << (RANGE_SMALL_A01_DF6_IN    &0x1f)) \
 | (1u << (RANGE_SMALL_A01_DF7_IN    &0x1f)) \
 | (1u << (RANGE_SMALL_A01_DF8_IN    &0x1f)) \
 | (1u << (RANGE_SMALL_A01_DF9_IN    &0x1f)) \
 | (1u << (RANGE_SMALL_A01_DF10_IN   &0x1f)) \
 | (1u << (RANGE_SMALL_A01_DF11_IN   &0x1f)) \
 | (1u << (RANGE_SMALL_A01_DF12_IN   &0x1f)) \
 | (1u << (RANGE_SMALL_A01_DF13_IN   &0x1f)) \
 | (1u << (RANGE_SMALL_A01_DF14_IN   &0x1f)) \
 | (1u << (RANGE_SMALL_A01_DF15_IN   &0x1f)) \
 | (1u << (RANGE_SMALL_A01_DF16_IN   &0x1f)) \
 | (1u << (RANGE_SMALL_A01_DT1_SET   &0x1f)) \
 | (1u << (RANGE_SMALL_A01_DT1_RESET &0x1f)) \
 | (1u << (RANGE_SMALL_A01_DT2_SET   &0x1f)) \
 | (1u << (RANGE_SMALL_A01_DT2_RESET &0x1f)) \
 | (1u << (RANGE_SMALL_A01_DT3_SET   &0x1f)) \
 | (1u << (RANGE_SMALL_A01_DT3_RESET &0x1f)) \
)

#define MASKA_BUTTON_MODE_0_SIGNALS_3 0

#define MASKA_BUTTON_MODE_0_SIGNALS_A01_3 (unsigned int)(   \
(1u << (RANGE_SMALL_A01_DT4_RESET&0x1f)) \
 | (1u << (RANG_SMALL_A01_LF1 &0x1f)) \
 | (1u << (RANG_SMALL_A01_LF2 &0x1f)) \
 | (1u << (RANG_SMALL_A01_LF3 &0x1f)) \
 | (1u << (RANG_SMALL_A01_LF4 &0x1f)) \
 | (1u << (RANG_SMALL_A01_LF5 &0x1f)) \
 | (1u << (RANG_SMALL_A01_LF6 &0x1f)) \
 | (1u << (RANG_SMALL_A01_LF7 &0x1f)) \
 | (1u << (RANG_SMALL_A01_LF8 &0x1f)) \
 | (1u << (RANG_SMALL_A01_LF9 &0x1f)) \
 | (1u << (RANG_SMALL_A01_LF10&0x1f)) \
 | (1u << (RANG_SMALL_A01_LF11&0x1f)) \
 | (1u << (RANG_SMALL_A01_LF12&0x1f)) \
 | (1u << (RANG_SMALL_A01_LF13&0x1f)) \
 | (1u << (RANG_SMALL_A01_LF14&0x1f)) \
 | (1u << (RANG_SMALL_A01_LF15&0x1f)) \
 | (1u << (RANG_SMALL_A01_LF16&0x1f)) \
)

/*****************************************/

/*****************************************/
//Макски сигналів, які можна зранжувати на функціональні кнопки у Режимі Ключ
/*****************************************/
#define MASKA_BUTTON_MODE_1_SIGNALS_0 0

#define MASKA_BUTTON_MODE_1_SIGNALS_A01_0 (unsigned int)(         \
    (1u << (RANGE_SMALL_A01_BLOCK_VKL_VVO       - 0))       \
  | (1u << (RANGE_SMALL_A01_BLOCK_VKL_VVP       - 0))       \
  | (1u << (RANGE_SMALL_A01_MISCEVE_DYSTANCIJNE - 0))       \
  | (1u << (RANGE_SMALL_A01_1_GRUPA_USTAVOK     - 0))       \
  | (1u << (RANGE_SMALL_A01_2_GRUPA_USTAVOK     - 0))       \
  | (1u << (RANGE_SMALL_A01_3_GRUPA_USTAVOK     - 0))       \
  | (1u << (RANGE_SMALL_A01_4_GRUPA_USTAVOK     - 0))       \
  | (1u << (0-0))      \
)

#define MASKA_BUTTON_MODE_1_SIGNALS_1 0

#define MASKA_BUTTON_MODE_1_SIGNALS_A01_1  MASKA_BUTTON_MODE_0_SIGNALS_A01_1

#define MASKA_BUTTON_MODE_1_SIGNALS_2 0

#define MASKA_BUTTON_MODE_1_SIGNALS_A01_2  MASKA_BUTTON_MODE_0_SIGNALS_A01_2

#define MASKA_BUTTON_MODE_1_SIGNALS_3 0

#define MASKA_BUTTON_MODE_1_SIGNALS_A01_3  MASKA_BUTTON_MODE_0_SIGNALS_A01_3

/*****************************************/

/*****************************************/
//Макска моніторингу максимального фазного струму основного каналу для дискретного реєстратора
/*****************************************/
#define MASKA_MONITOTYNG_PHASE_O_SIGNALES_0        0
#define MASKA_MONITOTYNG_PHASE_O_SIGNALES_1        0
#define MASKA_MONITOTYNG_PHASE_O_SIGNALES_2        0

#define MASKA_MONITOTYNG_PHASE_O_SIGNALES_3 (       \
     (1u << (RNG_BIG_PO_MCZO1 - 96))                \
   | (1u << (RNG_BIG_PO_MCZON1_VPERED - 96))        \
   | (1u << (RNG_BIG_PO_MCZON1_NAZAD - 96))         \
   | (1u << (RNG_BIG_PO_MCZOPN1 - 96))              \
   | (1u << (RNG_BIG_MCZO1 - 96))                   \
   | (1u << (RNG_BIG_PO_MCZO2 - 96))                \
   | (1u << (RNG_BIG_PO_MCZON2_VPERED - 96))        \
   | (1u << (RNG_BIG_PO_MCZON2_NAZAD - 96))         \
   | (1u << (RNG_BIG_PO_MCZOPN2 - 96))              \
   | (1u << (RNG_BIG_MCZO2 - 96))                   \
)

#define MASKA_MONITOTYNG_PHASE_O_SIGNALES_4 (       \
     (1u << (RNG_BIG_PO_MCZO3 - 128))               \
   | (1u << (RNG_BIG_PO_MCZON3_VPERED - 128))       \
   | (1u << (RNG_BIG_PO_MCZON3_NAZAD - 128))        \
   | (1u << (RNG_BIG_PO_MCZOPN3 - 128))             \
   | (1u << (RNG_BIG_MCZO3 - 128))                  \
   | (1u << (RNG_BIG_PO_MCZO4 - 128))               \
   | (1u << (RNG_BIG_PO_MCZON4_VPERED - 128))       \
   | (1u << (RNG_BIG_PO_MCZON4_NAZAD - 128))        \
   | (1u << (RNG_BIG_PO_MCZOPN4 - 128))             \
   | (1u << (RNG_BIG_MCZO4 - 128))                  \
)

#define MASKA_MONITOTYNG_PHASE_O_SIGNALES_5        0
#define MASKA_MONITOTYNG_PHASE_O_SIGNALES_6        0
#define MASKA_MONITOTYNG_PHASE_O_SIGNALES_7        0
#define MASKA_MONITOTYNG_PHASE_O_SIGNALES_8        0
#define MASKA_MONITOTYNG_PHASE_O_SIGNALES_9        0
#define MASKA_MONITOTYNG_PHASE_O_SIGNALES_10       0
#define MASKA_MONITOTYNG_PHASE_O_SIGNALES_11       0
#define MASKA_MONITOTYNG_PHASE_O_SIGNALES_12       0
/*****************************************/

/*****************************************/
//Макска моніторингу максимального фазного струму резервного каналу для дискретного реєстратора
/*****************************************/
#define MASKA_MONITOTYNG_PHASE_R_SIGNALES_0        0
#define MASKA_MONITOTYNG_PHASE_R_SIGNALES_1        0
#define MASKA_MONITOTYNG_PHASE_R_SIGNALES_2        0
#define MASKA_MONITOTYNG_PHASE_R_SIGNALES_3        0

#define MASKA_MONITOTYNG_PHASE_R_SIGNALES_4 (       \
     (1u << (RNG_BIG_PO_MCZR1 - 128))               \
   | (1u << (RNG_BIG_PO_MCZRN1_VPERED - 128))       \
   | (1u << (RNG_BIG_PO_MCZRN1_NAZAD - 128))        \
   | (1u << (RNG_BIG_PO_MCZRPN1 - 128))             \
   | (1u << (RNG_BIG_MCZR1 - 128))                  \
   | (1u << (RNG_BIG_PO_MCZR2 - 128))               \
   | (1u << (RNG_BIG_PO_MCZRN2_VPERED - 128))       \
   | (1u << (RNG_BIG_PO_MCZRN2_NAZAD - 128))        \
)

#define MASKA_MONITOTYNG_PHASE_R_SIGNALES_5 (       \
     (1u << (RNG_BIG_PO_MCZRPN2 - 160))             \
   | (1u << (RNG_BIG_MCZR2 - 160))                  \
)

#define MASKA_MONITOTYNG_PHASE_R_SIGNALES_6        0
#define MASKA_MONITOTYNG_PHASE_R_SIGNALES_7        0
#define MASKA_MONITOTYNG_PHASE_R_SIGNALES_8        0
#define MASKA_MONITOTYNG_PHASE_R_SIGNALES_9        0
#define MASKA_MONITOTYNG_PHASE_R_SIGNALES_10       0
#define MASKA_MONITOTYNG_PHASE_R_SIGNALES_11       0
#define MASKA_MONITOTYNG_PHASE_R_SIGNALES_12       0
/*****************************************/

/*****************************************/
//Макска моніторингу Umin для дискретного реєстратора
/*****************************************/
#define MASKA_MONITOTYNG_UMIN_SIGNALES_0        0
#define MASKA_MONITOTYNG_UMIN_SIGNALES_1        0
#define MASKA_MONITOTYNG_UMIN_SIGNALES_2        0
#define MASKA_MONITOTYNG_UMIN_SIGNALES_3        0
#define MASKA_MONITOTYNG_UMIN_SIGNALES_4        0
#define MASKA_MONITOTYNG_UMIN_SIGNALES_5        0
#define MASKA_MONITOTYNG_UMIN_SIGNALES_6        0

#define MASKA_MONITOTYNG_UMIN_SIGNALES_7 (          \
     (1u << (RNG_BIG_PO_UMIN1 - 224))               \
   | (1u << (RNG_BIG_UMIN1 - 224))                  \
   | (1u << (RNG_BIG_PO_UMIN2 - 224))               \
   | (1u << (RNG_BIG_UMIN2 - 224))                  \
)

#define MASKA_MONITOTYNG_UMIN_SIGNALES_8        0
#define MASKA_MONITOTYNG_UMIN_SIGNALES_9        0
#define MASKA_MONITOTYNG_UMIN_SIGNALES_10       0
#define MASKA_MONITOTYNG_UMIN_SIGNALES_11       0
#define MASKA_MONITOTYNG_UMIN_SIGNALES_12       0
/*****************************************/

/*****************************************/
//Макска моніторингу Umax для дискретного реєстратора
/*****************************************/
#define MASKA_MONITOTYNG_UMAX_SIGNALES_0        0
#define MASKA_MONITOTYNG_UMAX_SIGNALES_1        0
#define MASKA_MONITOTYNG_UMAX_SIGNALES_2        0
#define MASKA_MONITOTYNG_UMAX_SIGNALES_3        0
#define MASKA_MONITOTYNG_UMAX_SIGNALES_4        0
#define MASKA_MONITOTYNG_UMAX_SIGNALES_5        0
#define MASKA_MONITOTYNG_UMAX_SIGNALES_6        0

#define MASKA_MONITOTYNG_UMAX_SIGNALES_7 (          \
     (1u << (RNG_BIG_PO_UMAX1 - 224))               \
   | (1u << (RNG_BIG_UMAX1 - 224))                  \
   | (1u << (RNG_BIG_PO_UMAX2 - 224))               \
   | (1u << (RNG_BIG_UMAX2 - 224))                  \
)

#define MASKA_MONITOTYNG_UMAX_SIGNALES_8        0
#define MASKA_MONITOTYNG_UMAX_SIGNALES_9        0
#define MASKA_MONITOTYNG_UMAX_SIGNALES_10       0
#define MASKA_MONITOTYNG_UMAX_SIGNALES_11       0
#define MASKA_MONITOTYNG_UMAX_SIGNALES_12       0
/*****************************************/

/*****************************************/
//Макска моніторингу мінімального опору основного каналу для дискретного реєстратора
/*****************************************/
#define MASKA_MONITOTYNG_R_O_SIGNALES_0        0

#define MASKA_MONITOTYNG_R_O_SIGNALES_1 (           \
     (1u << (RNG_BIG_PO_DZO1 - 32))                 \
   | (1u << (RNG_BIG_DZO1 - 32))                    \
)

#define MASKA_MONITOTYNG_R_O_SIGNALES_2 (           \
     (1u << (RNG_BIG_PO_DIR_DZO2 - 64))             \
   | (1u << (RNG_BIG_PO_INV_DZO2 - 64))             \
   | (1u << (RNG_BIG_DZO2 - 64))                    \
   | (1u << (RNG_BIG_PO_DIR_DZO3 - 64))             \
   | (1u << (RNG_BIG_PO_INV_DZO3 - 64))             \
   | (1u << (RNG_BIG_DZO3 - 64))                    \
   | (1u << (RNG_BIG_PO_DIR_DZO4 - 64))             \
   | (1u << (RNG_BIG_PO_INV_DZO4 - 64))             \
   | (1u << (RNG_BIG_DZO4 - 64))                    \
)

#define MASKA_MONITOTYNG_R_O_SIGNALES_3        0
#define MASKA_MONITOTYNG_R_O_SIGNALES_4        0
#define MASKA_MONITOTYNG_R_O_SIGNALES_5        0
#define MASKA_MONITOTYNG_R_O_SIGNALES_6        0
#define MASKA_MONITOTYNG_R_O_SIGNALES_7        0
#define MASKA_MONITOTYNG_R_O_SIGNALES_8        0
#define MASKA_MONITOTYNG_R_O_SIGNALES_9        0
#define MASKA_MONITOTYNG_R_O_SIGNALES_10       0
#define MASKA_MONITOTYNG_R_O_SIGNALES_11       0
#define MASKA_MONITOTYNG_R_O_SIGNALES_12       0
/*****************************************/

/*****************************************/
//Макска моніторингу мінімального опору резервного каналу для дискретного реєстратора
/*****************************************/
#define MASKA_MONITOTYNG_R_R_SIGNALES_0        0
#define MASKA_MONITOTYNG_R_R_SIGNALES_1        0
#define MASKA_MONITOTYNG_R_R_SIGNALES_2        0
#define MASKA_MONITOTYNG_R_R_SIGNALES_3        0
#define MASKA_MONITOTYNG_R_R_SIGNALES_4        0
#define MASKA_MONITOTYNG_R_R_SIGNALES_5        0

#define MASKA_MONITOTYNG_R_R_SIGNALES_6 (           \
     (1u << (RNG_BIG_PO_DZR1 - 192))                \
   | (1u << (RNG_BIG_DZR1 - 192))                   \
   | (1u << (RNG_BIG_PO_DIR_DZR2 - 192))            \
   | (1u << (RNG_BIG_PO_INV_DZR2 - 192))            \
   | (1u << (RNG_BIG_DZR2 - 192))                   \
   | (1u << (RNG_BIG_PO_DIR_DZR3 - 192))            \
   | (1u << (RNG_BIG_PO_INV_DZR3 - 192))            \
   | (1u << (RNG_BIG_DZR3 - 192))                   \
)

#define MASKA_MONITOTYNG_R_R_SIGNALES_7        0
#define MASKA_MONITOTYNG_R_R_SIGNALES_8        0
#define MASKA_MONITOTYNG_R_R_SIGNALES_9        0
#define MASKA_MONITOTYNG_R_R_SIGNALES_10       0
#define MASKA_MONITOTYNG_R_R_SIGNALES_11       0
#define MASKA_MONITOTYNG_R_R_SIGNALES_12       0
/*****************************************/

/*****************************************/
//Макска моніторингу частоти при АЧР для дискретного реєстратора
/*****************************************/
#define MASKA_MONITOTYNG_F_MIN_ACHR_SIGNALES_0   0
#define MASKA_MONITOTYNG_F_MIN_ACHR_SIGNALES_1   0
#define MASKA_MONITOTYNG_F_MIN_ACHR_SIGNALES_2   0
#define MASKA_MONITOTYNG_F_MIN_ACHR_SIGNALES_3   0
#define MASKA_MONITOTYNG_F_MIN_ACHR_SIGNALES_4   0

#define MASKA_MONITOTYNG_F_MIN_ACHR_SIGNALES_5 (    \
     (1u << (RNG_BIG_PO_ACHR1 - 160))               \
   | (1u << (RNG_BIG_ACHR_CHAPV1 - 160))            \
   | (1u << (RNG_BIG_PO_ACHR2 - 160))               \
   | (1u << (RNG_BIG_ACHR_CHAPV2 - 160))            \
)     

#define MASKA_MONITOTYNG_F_MIN_ACHR_SIGNALES_6   0
#define MASKA_MONITOTYNG_F_MIN_ACHR_SIGNALES_7   0
#define MASKA_MONITOTYNG_F_MIN_ACHR_SIGNALES_8   0
#define MASKA_MONITOTYNG_F_MIN_ACHR_SIGNALES_9   0
#define MASKA_MONITOTYNG_F_MIN_ACHR_SIGNALES_10   0
#define MASKA_MONITOTYNG_F_MIN_ACHR_SIGNALES_11  0
#define MASKA_MONITOTYNG_F_MIN_ACHR_SIGNALES_12  0
/*****************************************/

/*****************************************/
//Макска моніторингу максимального фазного струму для фіксації КЗ
/*****************************************/
#define MASKA_MONITOTYNG_PHASE_SIGNALES_KZ_0   0

#define MASKA_MONITOTYNG_PHASE_SIGNALES_KZ_1 (                 \
     (1u << (RNG_BIG_PO_DZO1 - 32))                            \
)

#define MASKA_MONITOTYNG_PHASE_SIGNALES_KZ_2 (                 \
     (1u << (RNG_BIG_PO_DIR_DZO2 - 64))                        \
   | (1u << (RNG_BIG_PO_INV_DZO2 - 64))                        \
   | (1u << (RNG_BIG_PO_DIR_DZO3 - 64))                        \
   | (1u << (RNG_BIG_PO_INV_DZO3 - 64))                        \
   | (1u << (RNG_BIG_PO_DIR_DZO4 - 64))                        \
   | (1u << (RNG_BIG_PO_INV_DZO4 - 64))                        \
)

#define MASKA_MONITOTYNG_PHASE_SIGNALES_KZ_3        0
#define MASKA_MONITOTYNG_PHASE_SIGNALES_KZ_4        0
#define MASKA_MONITOTYNG_PHASE_SIGNALES_KZ_5        0
#define MASKA_MONITOTYNG_PHASE_SIGNALES_KZ_6        0
#define MASKA_MONITOTYNG_PHASE_SIGNALES_KZ_7        0
#define MASKA_MONITOTYNG_PHASE_SIGNALES_KZ_8        0
#define MASKA_MONITOTYNG_PHASE_SIGNALES_KZ_9        0
#define MASKA_MONITOTYNG_PHASE_SIGNALES_KZ_10       0
#define MASKA_MONITOTYNG_PHASE_SIGNALES_KZ_11       0
#define MASKA_MONITOTYNG_PHASE_SIGNALES_KZ_12       0
/*****************************************/

/*****************************************/
//Версія програмного забезпечення
/*****************************************/
#define VERSIA_PZ                                             19
#define MODYFIKACIA_VERSII_PZ                                 2
#define ZBIRKA_VERSII_PZ                                      0
#define ZBIRKA_PIDVERSII_PZ                                   0
/*****************************************/

/*****************************************/
//Час компіляції
/*****************************************/

#define YEAR_VER                                              ((__DATE__[9] != ' ') ? (((__DATE__[9] - 0x30) << 4) | (__DATE__[10] - 0x30)) : (__DATE__[10] - 0x30))
#define MONTH_VER                                             str_to_int_DATE_Mmm()
#define DAY_VER                                               ((__DATE__[4] != ' ') ? (((__DATE__[4] - 0x30) << 4) | (__DATE__[5] - 0x30)) : (__DATE__[5] - 0x30))
#define HOUR_VER                                              (((__TIME__[0] - 0x30) << 4) | (__TIME__[1] - 0x30))
#define MINUTE_VER                                            (((__TIME__[3] - 0x30) << 4) | (__TIME__[4] - 0x30))
#define SECOND_VER                                            (((__TIME__[6] - 0x30) << 4) | (__TIME__[7] - 0x30))
/*****************************************/

#endif
